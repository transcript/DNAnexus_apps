#!/bin/bash
# kraken 1.1.0
# Generated by dx-app-wizard.

main() {

    echo "Value of input_seqs: '$input_seqs'"
    echo "Value of MPA format variable: '$mpa_format'"

    dx-download-all-inputs --parallel

    paired=false
    prefix=""

    for file in "${input_seqs_path[@]}"; do
	if [[ $file == *.1.* ]] || [[ $file == *_1.* ]]; then
		echo "FORWARD FILE: " $file
		prefix=`basename "$file" | awk -F "." '{print $1}'`
		if [[ $file =~ \.gz$ ]]; then
			sudo apt-get install pigz
			cp $file ~/input_seqs_1.fq.gz
			pigz -d ~/input_seqs_1.fq.gz
		else
			cp $file ~/input_seqs_1.fq
		fi
	elif [[ $file == *.2.* ]] || [[ $file == *_2.* ]]; then
		echo "REVERSE FILE: " $file
		if [[ $file =~ \.gz$ ]]; then
			sudo apt-get install pigz
			cp $file ~/input_seqs_2.fq.gz
			pigz -d ~/input_seqs_2.fq.gz
		else
			cp $file ~/input_seqs_2.fq
		fi
		paired=true
	else
		prefix=`basename "$file" | awk -F "." '{print $1}'`
		if [[ $file =~ \.gz$ ]]; then
                        sudo apt-get install pigz
                        cp $file ~/input_seqs_1.fq.gz
                        pigz -d ~/input_seqs_1.fq.gz
                else
                        cp $file ~/input_seqs_1.fq
                fi		
	fi
    done

    # installing/setting up Jellyfish (Kraken dependency)
    cd jellyfish-1.1.11/
    ./configure
    sudo make
    sudo make install
    sudo ldconfig
    cd ../

    # installing/setting up Kraken
    cd kraken/
    ./install_kraken.sh /home/dnanexus/kraken
    cd ../
    export PATH=$PATH:/home/dnanexus/kraken

    # getting the Kraken database
    # default is attached as asset, should be in /usr/bin/minikrakendb/
    if [ "$database_file" != "" ]; then
	dx download "$database_file" -o minikrakendb.tar.gz
	mkdir ~/customKrakenDB
	tar -C ~/customKrakenDB -xvf minikrakendb.tar.gz
	database=~/customKrakenDB
    else
	database=/usr/bin/minikrakendb
    fi

    # running the Kraken search
    if [ $paired = false ]; then
      kraken --db $database input_seqs_1.fq --output $prefix"_kraken_results.out"
      kraken-report --db $database $prefix"_kraken_results.out" > $prefix"_kraken_summary.out"
    else
    	kraken --db $database --paired --classified-out kraken_results#.out input_seqs_1.fq input_seqs_2.fq > $prefix"_kraken_results.out"
    	kraken-report --db $database $prefix"_kraken_results.out" > $prefix"_kraken_summary.out"
    fi

    # Reporting results in MPA format for MetaPhlAn2
    if [ $mpa_format = "true" ]; then
    	kraken-mpa-report --db $database $prefix"_kraken_results.out" > $prefix"_kraken_mpa_report.out"
    fi

    # uploading results
    kraken_output=$(dx upload $prefix"_kraken_results.out" --brief)
    kraken_report=$(dx upload $prefix"_kraken_summary.out" --brief)
    if [ $mpa_format = "true" ]; then
    	kraken_mpa_report=$(dx upload $prefix"_kraken_mpa_report.out" --brief)
    fi

    dx-jobutil-add-output kraken_output "$kraken_output" --class=file
    dx-jobutil-add-output kraken_report "$kraken_report" --class=file
    if [ $mpa_format = "true" ]; then
    	dx-jobutil-add-output kraken_mpa_report "$kraken_mpa_report" --class=file
    fi
}
