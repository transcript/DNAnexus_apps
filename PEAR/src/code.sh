#!/bin/bash
# PEAR 0.9.10
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of forward_reads: '$forward_reads_path'"
    echo "Value of reverse_reads: '$reverse_reads_path'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    sudo apt-get install bcftools --yes
    bcftools --version
   
    dx download "$forward_reads"

    dx download "$reverse_reads"

    # Fill in your application code here.

    prefix="$forward_reads_prefix"
    echo "Prefix: '$prefix'"
    mkdir merged/
    touch merged/"${prefix}".assembled.fastq
    /usr/bin/pear-0.9.10-linux-x86_64/bin/pear -f "$forward_reads_name" -r "$reverse_reads_name" -o merged/"${prefix}"

    ls merged/

    notcombined_1=merged/"$prefix".unassembled.forward.fastq
    notcombined_2=merged/"$prefix".unassembled.reverse.fastq
    paired_reads=merged/"$prefix".assembled.fastq
    discarded_reads=merged/"$prefix".discarded.fastq

    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "PEAR has crashed, good luck with that."
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    # The following line(s) use the dx command-line tool to upload your file
    # outputs after you have created them on the local file system.  It assumes
    # that you have used the output field name for the filename for each output,
    # but you can change that behavior to suit your needs.  Run "dx upload -h"
    # to see more options to set metadata.

    file=file.tab.fastq

    paired_reads=$(dx upload "$paired_reads" --brief)
    notcombined_1=$(dx upload "$notcombined_1" --brief)
    notcombined_2=$(dx upload "$notcombined_2" --brief)
    discarded=$(dx upload "$discarded_reads" --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output paired_reads "$paired_reads" --class=file
    dx-jobutil-add-output notcombined_1 "$notcombined_1" --class=file
    dx-jobutil-add-output notcombined_2 "$notcombined_2" --class=file
    dx-jobutil-add-output discarded "$discarded" --class=file
}
